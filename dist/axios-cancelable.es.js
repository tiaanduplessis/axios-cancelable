import{CancelToken as e}from"axios";var t=function(e){void 0===e&&(e={}),this.options=e,this.requests=new Map(e.initial||[])};t.prototype.add=function(e,t){this.log("Adding request "+e),this.requests.has(e)&&this.cancel(e,"Duplicate request "+e),this.requests.set(e,t)},t.prototype.remove=function(e){this.log("Removing request "+e),this.requests.delete(e)},t.prototype.cancel=function(e,t){void 0===t&&(t=""),this.requests.has(e)&&(this.requests.get(e)(t),this.remove(e),this.log("Cancelled request "+e))},t.prototype.cancelAll=function(e){for(var t in void 0===e&&(e=""),this.requests.keys())this.cancel(t,e)},t.prototype.log=function(e){var t=this.options;t.debug&&(0,t.logger)("axios-cancelable: "+e)};export default function(o,s){void 0===s&&(s={});var n=s.debug;void 0===n&&(n=!1);var i=s.logger;void 0===i&&(i=console.log);var r=new t({debug:n,logger:i});o.interceptors.request.use(function(t){var o=t.requestId;if(o){var s=e.source();t.cancelToken=s.token,r.add(o,s.cancel)}return t}),o.interceptors.response.use(function(e){var t=e.config.requestId;return t&&r.remove(t),e}),o.cancel=function(e,t){e&&r.cancel(e,t)},o.cancelAll=function(e){r.cancelAll(e)}}
//# sourceMappingURL=axios-cancelable.es.js.map
