!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("axios")):"function"==typeof define&&define.amd?define(["axios"],t):e.axiosCancelable=t(e.axios)}(this,function(e){var t=function(e){void 0===e&&(e={}),this.options=e,this.requests=new Map(e.initial||[])};return t.prototype.add=function(e,t){this.log("Adding request "+e),this.requests.has(e)&&this.cancel(e,"Duplicate request "+e),this.requests.set(e,t)},t.prototype.remove=function(e){this.log("Removing request "+e),this.requests.delete(e)},t.prototype.cancel=function(e,t){void 0===t&&(t=""),this.requests.has(e)&&(this.requests.get(e)(t),this.remove(e),this.log("Cancelled request "+e))},t.prototype.cancelAll=function(e){for(var t in void 0===e&&(e=""),this.requests.keys())this.cancel(t,e)},t.prototype.log=function(e){var t=this.options;t.debug&&(0,t.logger)("axios-cancelable: "+e)},function(o,n){void 0===n&&(n={});var i=n.debug;void 0===i&&(i=!1);var s=n.logger;void 0===s&&(s=console.log);var r=new t({debug:i,logger:s});o.interceptors.request.use(function(t){var o=t.requestId;if(o){var n=e.CancelToken.source();t.cancelToken=n.token,r.add(o,n.cancel)}return t}),o.interceptors.response.use(function(e){var t=e.config.requestId;return t&&r.remove(t),e}),o.cancel=function(e,t){e&&r.cancel(e,t)},o.cancelAll=function(e){r.cancelAll(e)}}});
//# sourceMappingURL=axios-cancelable.umd.js.map
